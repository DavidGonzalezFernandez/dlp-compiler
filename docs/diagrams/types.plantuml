@startuml Types
skinparam style strictuml
skinparam monochrome true

interface ASTNode {
    getLine(): int
    getColumn(): int
}

interface Type

ASTNode <|-- Type

'Los tipos simples son: int, double, char
class IntType
class DoubleType
class CharType

' Los tipos complejos son Arrays y Structs
class Array
class Struct

/' Los arrays pueden ser creados usando [] para construir un tipo nuevo,
debiendo especificar el tamaño del array, previo a su tipo, en su construcción '/
class Array {
    size: int
    type: Type
}

class StructField {
    name: String
    type: Type
}

' Un registro se puede crear usando la palabra clave defstruct y definiendo una secuencia de variables
class Struct {
    ' TODO ¿por qué este tipo concreto?
    fields: List<StructField>
}

class FuncType {
    params: VarDefinition
    returnType: Type    /'Sólo se devuelven tipos simples'/
    'TODO ¿qué pasa si el tipo de retorno es VOID?
}

Type <|.. FuncType
Type <|.. IntType
Type <|.. DoubleType
Type <|.. CharType
Type <|.. Array
Type <|.. Struct

@enduml
