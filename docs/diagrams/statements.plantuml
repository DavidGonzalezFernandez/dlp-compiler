@startuml Statements
skinparam style strictuml
skinparam monochrome true


interface ASTNode {
    getLine(): int
    getColumn(): int
}

interface Statement

/'
Una sentencia condicional se define usando la palabra clave if seguida de una condición.
El cuerpo de dicha sentencia estará comprendido entre do y end.
Se podrá usar la palabra clave else.
'/
class If {
    condition: Expression
    ifBody: List<Statement>
    elseBody: List<Statement>   /'puede no haber else, la lista estaría vacía'/
}

class While {
    condition: Expression
    body: List<Statement>
}

' El return debe estar seguido obligatoriamente de una expresión
class Return {
    returnExpression: Expression    /''/
}

/'
"Una escritura se compone por la palabra reservada puts y una lista de expresiones separadas por comas"
    Write no tiene una lista de Expression, se genera un Write para cada Expression
'/
class Write {
    expression: Expression
}

class Read {
    variableName: String
}

' Una asignación está compuesta por dos expresiones separadas por el operador =.
' TODO: la parte derecha no es una expresión, ¿no?
class Assignment {
    name: String
    value: Expression
}

ASTNode <|-- Statement
Statement <|.. If
Statement <|.. While
Statement <|.. Return
Statement <|.. Assignment

If o-- "1" Expression
While o-- "1" Expression
Return o-- "1" Expression
Assignment o-- "1" Expression

If o-- "0..n" Statement
While o-- "0..n" Statement


@enduml
