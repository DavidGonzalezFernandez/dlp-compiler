@startuml Statements
skinparam style strictuml
skinparam monochrome true

interface ASTNode {
    getLine(): int
    getColumn(): int
}

interface Statement
ASTNode <|-- Statement

/'
Una sentencia condicional se define usando la palabra clave if seguida de una condición.
El cuerpo de dicha sentencia estará comprendido entre do y end.
Se podrá usar la palabra clave else.
'/
class If {
    condition: Expression
    ifBody: List<Statement>
    elseBody: List<Statement>   /'puede no haber else, la lista estaría vacía'/
}
Statement <|.. If
If o-- "1" Expression
If o-- "0..n" Statement

class While {
    condition: Expression
    body: List<Statement>
}
Statement <|.. While
While o-- "1" Expression
While o-- "0..n" Statement

' El return debe estar seguido obligatoriamente de una expresión
class Return {
    returnExpression: Expression    /'qué '/
}
Statement <|.. Return
Return o-- "1" Expression

/' "Una escritura se compone por la palabra reservada puts y una lista de expresiones separadas por comas"
    Write no tiene una lista de Expression, se genera un Write para cada Expression
'/
class Write {
    expression: Expression
}
Statement <|.. Write
Write o-- "1" Expression

class Read {
    variableName: String
}
Statement <|.. Read

' Una asignación está compuesta por dos expresiones separadas por el operador =.
class Assignment {
    name: String
    value: Expression
}
Statement <|.. Assignment
Assignment o-- "1" Expression

@enduml
